<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcgProject.dao.impl.GoodsDaoImpl">

	<sql id="table"> goods </sql>
	
	<resultMap type="goods" id="goodsMap">
		<result property="id" column="Id"/>
		<result property="goodsName" column="goods_name"/>
		<result property="amount" column="amount"/>
		<result property="remark" column="remark"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="Id != null and Id != ''"> and Id = #{Id} </if>
		<if test="goods_name != null and goods_name != ''"> and goods_name = #{goods_name} </if>
		<if test="amount != null"> and amount = #{amount} </if>
		<if test="remark != null and remark != ''"> and remark = #{remark} </if>
	</sql>
	
	<sql id="sql_where_key">
		Id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		Id
	</sql>
	
	<sql id="queryLikeSql">
		<if test="goods_name != null and goods_name != ''"><![CDATA[goods_name LIKE concat('%',#{goods_name}, '%')]]></if>
		<if test="remark != null and remark != ''"><![CDATA[or remark LIKE concat('%', #{remark}, '%')]]></if>
	</sql>
	
	<insert id="insert" parameterType="goods" >
		insert into
		<include refid="table" />
		(
			Id, goods_name, amount, remark
		) values(
			#{id}, #{goodsName}, #{amount}, #{remark}
		)
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			Id, goods_name, amount, remark
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.goodsName}, #{item.amount}, #{item.remark})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="goods">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="goods">
		update
		<include refid="table" />
		<set>
			Id = #{id},
			goods_name = #{goodsName},
			amount = #{amount},
			remark = #{remark}
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="goods" resultMap="goodsMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="goodsMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="findPage" parameterType="java.util.Map" resultMap="goodsMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="queryLikeSql" />
		</where>
		order by
		<include refid="sql_order_key" />
		limit #{a}, #{b}
	</select>
	
	<!-- 按参数查询（分页）数量 -->
	<select id="findPageCount" parameterType="hashmap" resultType="integer">
		select count(1) from
		<include refid="table" />
		<where>
			<include refid="queryLikeSql" />
		</where>
		order by
		<include refid="sql_order_key" />
	</select>
	
</mapper>