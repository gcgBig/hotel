<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcgProject.dao.impl.PassengerDaoImpl">

	<sql id="table"> passenger </sql>
	
	<resultMap type="passenger" id="passengerMap">
		<result property="id" column="Id"/>
		<result property="name" column="name"/>
		<result property="idCode" column="id_code"/>
		<result property="vipId" column="vip_id"/>
		<result property="vipIntegral" column="vip_integral"/>
	</resultMap>
	
	<sql id="sql_where">
		<if test="Id != null and Id != ''"> and Id = #{Id} </if>
		<if test="name != null and name != ''"> and name = #{name} </if>
		<if test="id_code != null and id_code != ''"> and id_code = #{id_code} </if>
		<if test="vip_id != null and vip_id != ''"> and vip_id = #{vip_id} </if>
		<if test="vip_integral != null"> and vip_integral = #{vip_integral} </if>
	</sql>
	
	<sql id="sql_where_key">
		Id = #{id}
	</sql>
	
	<sql id="sql_order_key">
		Id
	</sql>
	
	<sql id="queryLikeSql">
		<if test="id_code != null and id_code != ''"><![CDATA[id_code LIKE concat('%',#{id_code}, '%')]]></if>
		<if test="name != null and name != ''"><![CDATA[or name LIKE concat('%', #{name}, '%')]]></if>
	</sql>
	
	<insert id="insert" parameterType="passenger" >
		insert into
		<include refid="table" />
		(
			Id, name, id_code, vip_id, vip_integral
		) values(
			#{id}, #{name}, #{idCode}, #{vipId}, #{vipIntegral}
		)
	</insert>
	
	<insert id="batchInsert" parameterType="java.util.List" >
		insert into
		<include refid="table" />
		(
			Id, name, id_code, vip_id, vip_integral
		) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id}, #{item.name}, #{item.idCode}, #{item.vipId}, #{item.vipIntegral})
		</foreach>
	</insert>
	
	<delete id="delete" parameterType="passenger">
		delete from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</delete>
	
	<update id="update" parameterType="passenger">
		update
		<include refid="table" />
		<set>
			Id = #{id},
			name = #{name},
			id_code = #{idCode},
			vip_id = #{vipId},
			vip_integral = #{vipIntegral}
		</set>
		<where>
			<include refid="sql_where_key" />
		</where>
	</update>
	
	<!-- 按主键查询 -->
	<select id="select" parameterType="passenger" resultMap="passengerMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where_key" />
		</where>
	</select>

	<!-- 按参数查询 -->
	<select id="selectBy" parameterType="java.util.Map" resultMap="passengerMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="sql_where" />
		</where>
	</select>

	<!-- 按参数查询（分页） -->
	<select id="findPage" parameterType="java.util.Map" resultMap="passengerMap">
		select * from
		<include refid="table" />
		<where>
			<include refid="queryLikeSql" />
		</where>
		order by
		<include refid="sql_order_key" />
		limit #{a}, #{b}
	</select>
	
	<!-- 按参数查询（分页）数量 -->
	<select id="findPageCount" parameterType="hashmap" resultType="integer">
		select count(1) from
		<include refid="table" />
		<where>
			<include refid="queryLikeSql" />
		</where>
		order by
		<include refid="sql_order_key" />
	</select>
	
</mapper>